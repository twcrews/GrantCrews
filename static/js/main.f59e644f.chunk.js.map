{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","style","Data","Meta","Styles","Global","Header","Hero","id","variant","paragraph","Heading","Title","Subtitle","Attributes","map","attr","Attribute","IconHeading","Icon","fontSize","color","Name","Description","Sections","section","Fragment","Content","item","Footer","Copyright","replace","Date","getFullYear","toString","Subtext","size","disableElevation","onClick","url","PromotionLink","window","open","PromotionText","theme","createMuiTheme","Theme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"wNA6FeA,MAxFf,WAGE,OACE,sBAAKC,MAAOC,EAAKC,KAAKC,OAAOC,OAA7B,UAGE,sBAAKJ,MAAOC,EAAKC,KAAKC,OAAOE,OAA7B,UACE,qBAAKL,MAAOC,EAAKC,KAAKC,OAAOG,OAC7B,cAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,KACRC,WAAS,EACTT,MAAOC,EAAKC,KAAKC,OAAOO,QAJ1B,SAMGT,EAAKI,OAAOM,QAEf,cAAC,IAAD,CACEJ,GAAG,WACHC,QAAQ,KACRR,MAAOC,EAAKC,KAAKC,OAAOO,QAH1B,SAKGT,EAAKI,OAAOO,WAEf,2BAICX,EAAKY,WAAWC,KAAI,SAAAC,GAAI,OACvB,sBAEEf,MAAOC,EAAKC,KAAKC,OAAOa,UAF1B,UAIE,uBAAMhB,MAAOC,EAAKC,KAAKC,OAAOc,YAA9B,UACE,cAACC,EAAA,EAAD,CAAMC,SAAS,UAAUC,MAAM,UAA/B,SACGL,EAAKG,OAER,cAAC,IAAD,CAAqBV,QAAQ,KAA7B,SACGO,EAAKM,UAGV,gCACE,cAAC,IAAD,CAAqBD,MAAM,UAA3B,SACGL,EAAKO,cAER,cAAC,IAAD,CAAqBd,QAAQ,KAAKC,WAAS,IAC1CM,EAAKQ,SAAST,KAAI,SAAAU,GAAO,OACxB,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CAAqBjB,QAAQ,KAA7B,SACGgB,EAAQb,QAEVa,EAAQE,QAAQZ,KAAI,SAAAa,GAAI,OACvB,cAAC,IAAD,UACGA,GADuBA,MAI5B,cAAC,IAAD,CAAqBnB,QAAQ,KAAKC,WAAS,MATxBe,EAAQb,eAjB5BI,EAAKM,SAiChB,wBAAQrB,MAAOC,EAAKC,KAAKC,OAAOyB,OAAhC,SACE,gCACE,cAAC,IAAD,UACG3B,EAAK2B,OAAOC,UAAUC,QAAQ,UAC7B,IAAIC,MAAOC,cAAcC,cAE7B,cAAC,IAAD,CAAqBzB,QAAQ,UAAUC,WAAS,EAAhD,SACGR,EAAK2B,OAAOM,UAEf,cAAC,IAAD,CACE1B,QAAQ,YACRY,MAAM,YACNe,KAAK,QACLC,kBAAgB,EAChBC,QAAS,kBA5ECC,EA4EgBrC,EAAK2B,OAAOW,mBA5EVC,OAAOC,KAAKH,EAAK,UAApC,IAACA,GA6EVtC,MAAOC,EAAKC,KAAKC,OAAOO,QAN1B,SAQGT,EAAK2B,OAAOc,yB,gBC9ErBC,EAAQC,YAAe3C,EAAKC,KAAK2C,OAErCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,U","file":"static/js/main.f59e644f.chunk.js","sourcesContent":["import React from 'react';\nimport * as Material from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport Data from './Data.json';\n\nfunction App() {\n  const handleLink = (url: string) => { window.open(url, \"_blank\"); };\n\n  return (\n    <div style={Data.Meta.Styles.Global as React.CSSProperties}>\n\n      {/* Header/hero */}\n      <div style={Data.Meta.Styles.Header as React.CSSProperties}>\n        <div style={Data.Meta.Styles.Hero} />\n        <Material.Typography\n          id=\"title\"\n          variant=\"h1\"\n          paragraph\n          style={Data.Meta.Styles.Heading}\n        >\n          {Data.Header.Title}\n        </Material.Typography>\n        <Material.Typography\n          id=\"subtitle\"\n          variant=\"h4\"\n          style={Data.Meta.Styles.Heading}\n        >\n          {Data.Header.Subtitle}\n        </Material.Typography>\n        <div />\n      </div>\n\n      {/* Attributes */}\n        {Data.Attributes.map(attr =>\n          <div \n            key={attr.Name} \n            style={Data.Meta.Styles.Attribute as React.CSSProperties}\n          >\n            <span style={Data.Meta.Styles.IconHeading}>\n              <Icon fontSize=\"default\" color=\"primary\">\n                {attr.Icon}\n              </Icon>\n              <Material.Typography variant=\"h5\">\n                {attr.Name}\n              </Material.Typography>\n            </span>\n            <div>\n              <Material.Typography color=\"inherit\">\n                {attr.Description}\n              </Material.Typography>\n              <Material.Typography variant=\"h6\" paragraph />\n              {attr.Sections.map(section =>\n                <React.Fragment key={section.Title}>\n                  <Material.Typography variant=\"h6\">\n                    {section.Title}\n                  </Material.Typography>\n                  {section.Content.map(item =>\n                    <Material.Typography key={item}>\n                      {item}\n                    </Material.Typography>\n                  )}\n                  <Material.Typography variant=\"h6\" paragraph />\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        )}\n\n      <footer style={Data.Meta.Styles.Footer as React.CSSProperties}>\n        <div>\n          <Material.Typography>\n            {Data.Footer.Copyright.replace(\"{year}\",\n              new Date().getFullYear().toString())}\n          </Material.Typography>\n          <Material.Typography variant=\"caption\" paragraph>\n            {Data.Footer.Subtext}\n          </Material.Typography>\n          <Material.Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            disableElevation\n            onClick={() => handleLink(Data.Footer.PromotionLink)}\n            style={Data.Meta.Styles.Heading}\n          >\n            {Data.Footer.PromotionText}\n          </Material.Button>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Data from './Data.json';\n\nlet theme = createMuiTheme(Data.Meta.Theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}